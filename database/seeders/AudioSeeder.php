<?php

namespace Database\Seeders;

use App\Models\AudioFormats;
use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class AudioSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        $formats = [
            "3g2",
            "3gp",
            "a64",
            "ac3",
            "adts",
            "adx",
            "aiff",
            "alaw",
            "alp",
            "alsa",
            "amr",
            "amv",
            "apm",
            "apng",
            "aptx",
            "aptx_hd",
            "argo_asf",
            "argo_cvg",
            "asf",
            "asf_stream",
            "ass",
            "ast",
            "au",
            "avi",
            "avif",
            "avm2",
            "avs2",
            "avs3",
            "bit",
            "caca",
            "caf",
            "cavsvideo",
            "chromaprint",
            "codec2",
            "codec2raw",
            "crc",
            "dash",
            "data",
            "daud",
            "dfpwm",
            "dirac",
            "dnxhd",
            "dts",
            "dv",
            "dvd",
            "eac3",
            "EOF4mpegpipe",
            "f32be",
            "f32le",
            "f4v",
            "f64be",
            "f64le",
            "fbdev",
            "ffmetadata",
            "fifo",
            "fifo_test",
            "film_cpk",
            "filmstrip",
            "fits",
            "flac",
            "flv",
            "framecrc",
            "framehash",
            "framemd5",
            "g722",
            "g723_1",
            "g726",
            "g726le",
            "gif",
            "gsm",
            "gxf",
            "h261",
            "h263",
            "h264",
            "hash",
            "hds",
            "hevc",
            "hls",
            "ico",
            "idf",
            "ilbc",
            "image2",
            "image2pipe",
            "ipod",
            "ircam",
            "ismv",
            "ivf",
            "jacosub",
            "kvag",
            "latm",
            "lrc",
            "m4v",
            "matroska",
            "md5",
            "microdvd",
            "mjpeg",
            "mkvtimestamp_v2",
            "mlp",
            "mmf",
            "mov",
            "mp2",
            "mp3",
            "mp4",
            "mpeg",
            "mpeg1video",
            "mpeg2video",
            "mpegts",
            "mpjpeg",
            "mulaw",
            "mxf",
            "mxf_d10",
            "mxf_opatom",
            "null",
            "nut",
            "obu",
            "oga",
            "ogg",
            "ogv",
            "oma",
            "opengl",
            "opus",
            "oss",
            "psp",
            "pulse",
            "r3d",
            "rawvideo",
            "rm",
            "roq",
            "rso",
            "rtp",
            "rtp_mpegts",
            "rtsp",
            "s16be",
            "s16le",
            "s24be",
            "s24le",
            "s32be",
            "s32le",
            "s337m",
            "s8",
            "sap",
            "sbc",
            "scc",
            "sdl,sdl2",
            "segment",
            "smjpeg",
            "smoothstreaming",
            "sox",
            "spdif",
            "spx",
            "srt",
            "stream_segment,s",
            "streamhash",
            "sup",
            "svcd",
            "swf",
            "tee",
            "truehd",
            "tta",
            "ttml",
            "u16be",
            "u16le",
            "u24be",
            "u24le",
            "u32be",
            "u32le",
            "u8",
            "uncodedframecrc",
            "vc1",
            "vc1test",
            "vcd",
            "vidc",
            "video4linux2",
            "vob",
            "voc",
            "w64",
            "wav",
            "webm",
            "webp",
            "webvtt",
            "wsaud",
            "wtv",
            "wv",
            "xv",
            "yuv4mpegpipe",
        ];
        foreach ($formats as $format) {
            AudioFormats::create([
                'extension' => strtolower($format),
                'name' => $format
            ]);
        }
    }
}
